---
- name: Integrate ThreatFox Connector into OpenCTI
  hosts: openctihost
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
    opencti_base_url: localhost
    opencti_port: 8181
    app_port: 8181
    # Ensure these variables are defined here if they are needed in the env.j2 template
    opencti_admin_email: cyberfox@system.git
    opencti_admin_password: masterpassword
    rabbitmq_default_user: guest
    rabbitmq_default_password: guest
    elastic_memory_size: 4
    smtp_hostname: localhost
    # The opencti_admin_token will be read from the .env file, so it's not defined here

  tasks:
    - name: Clone OpenCTI connectors repository
      git:
        repo: 'https://github.com/OpenCTI-Platform/connectors.git'
        dest: '/opt/opencti-connectors'
        version: 'master'

    - name: Ensure the ThreatFox directory exists
      ansible.builtin.file:
        path: "/opt/opencti/external-import/threatfox"
        state: directory

    - name: Copy ThreatFox specific files from cloned repo
      ansible.builtin.copy:
        src: "/opt/opencti-connectors/external-import/threatfox/"
        dest: "/opt/opencti/external-import/threatfox/"
        remote_src: yes

    - name: Read the .env file to get OPENCTI_ADMIN_TOKEN
      ansible.builtin.shell:
        cmd: grep OPENCTI_ADMIN_TOKEN /opt/opencti/.env | cut -d '=' -f2
      register: opencti_token_grep
      changed_when: false

    - name: Set the OPENCTI_ADMIN_TOKEN fact from the .env file
      ansible.builtin.set_fact:
        actual_opencti_admin_token: "{{ opencti_token_grep.stdout }}"

    - name: Template the ThreatFox Connector's .env
      template:
        src: "env.j2"
        dest: "/opt/opencti/external-import/threatfox/.env"
      vars:
        opencti_admin_token: "{{ actual_opencti_admin_token }}"  # Pass the token to the template

    - name: Download and install Go version of yq
      ansible.builtin.get_url:
        url: https://github.com/mikefarah/yq/releases/download/v4.27.2/yq_linux_amd64
        dest: /usr/local/bin/yq
        mode: '0755'

    - name: Insert ThreatFox MISP feed service into docker-compose.yml using yq
      ansible.builtin.shell: >
        /usr/local/bin/yq eval '.services.connector-misp-feed-threatfox = {
          "image": "opencti/connector-misp-feed:5.12.3",
          "environment": [
            "OPENCTI_URL=http://{{ opencti_base_url }}:{{ opencti_port }}",
            "OPENCTI_TOKEN={{ actual_opencti_admin_token }}",
            "CONNECTOR_ID={{ lookup('community.general.random_string') | ansible.builtin.to_uuid }}",
            "CONNECTOR_TYPE=EXTERNAL_IMPORT",
            "CONNECTOR_NAME=MISP Feed (ThreatFox)",
            "CONNECTOR_SCOPE=misp-feed",
            "CONNECTOR_CONFIDENCE_LEVEL=60",
            "CONNECTOR_UPDATE_EXISTING_DATA=true",
            "CONNECTOR_RUN_AND_TERMINATE=false",
            "CONNECTOR_LOG_LEVEL=info",
            "MISP_FEED_URL=https://threatfox.abuse.ch/downloads/misp/",
            "MISP_FEED_SSL_VERIFY=true",
            "MISP_FEED_IMPORT_FROM_DATE=2022-11-01",
            "MISP_FEED_CREATE_REPORTS=true",
            "MISP_FEED_REPORT_TYPE=misp-event",
            "MISP_FEED_CREATE_INDICATORS=true",
            "MISP_FEED_CREATE_OBSERVABLES=true",
            "MISP_FEED_CREATE_OBJECT_OBSERVABLES=true",
            "MISP_FEED_IMPORT_TO_IDS_NO_SCORE=40",
            "MISP_FEED_IMPORT_UNSUPPORTED_OBSERVABLES_AS_TEXT=false",
            "MISP_FEED_IMPORT_WITH_ATTACHMENTS=yes",
            "MISP_FEED_INTERVAL=60"
          ],
          "restart": "always",
          "depends_on": ["opencti"]
        }' -i /opt/opencti/docker-compose.yml


    - name: Restart the OpenCTI service
      ansible.builtin.shell:
        cmd: docker-compose up -d
        chdir: /opt/opencti/
